import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a,o as n}from"./app-Wl7KtN8V.js";const t={};function l(r,e){return n(),s("div",null,e[0]||(e[0]=[a(`<h1 id="vue-js" tabindex="-1"><a class="header-anchor" href="#vue-js"><span>Vue.js</span></a></h1><h2 id="一、vue简介" tabindex="-1"><a class="header-anchor" href="#一、vue简介"><span>一、Vue简介</span></a></h2><p>Vue.js 是一种用于构建用户界面的渐进式框架。与其他大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，并且非常容易上手，同时也方便与第三方库或现有项目整合。</p><h2 id="二、安装与环境准备" tabindex="-1"><a class="header-anchor" href="#二、安装与环境准备"><span>二、安装与环境准备</span></a></h2><ul><li><strong>CDN 方式</strong>：直接在 HTML 文件中通过 <code>&lt;script&gt;</code> 标签引入 Vue。</li><li><strong>npm 安装</strong>：对于较大的项目，推荐使用 npm 来安装 Vue，以便更好地管理依赖和使用构建工具（如 Webpack）。<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vue</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>Vue CLI</strong>：Vue 提供了官方命令行工具 Vue CLI，帮助快速搭建基于 Vue 的项目架构。<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @vue/cli</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vue</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-project</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="三、基础概念" tabindex="-1"><a class="header-anchor" href="#三、基础概念"><span>三、基础概念</span></a></h2><ol><li><strong>MVVM 模型</strong>：Model-View-ViewModel 架构模式，使得数据模型与视图分离，便于维护。</li><li><strong>指令系统</strong>：Vue 提供了一系列的指令（如 <code>v-if</code>, <code>v-for</code>, <code>v-bind</code>, <code>v-on</code> 等），用于绑定数据、控制结构以及事件处理。</li><li><strong>双向数据绑定</strong>：通过 <code>v-model</code> 实现表单输入和应用状态之间的双向绑定。</li></ol><h2 id="四、组件化开发" tabindex="-1"><a class="header-anchor" href="#四、组件化开发"><span>四、组件化开发</span></a></h2><ul><li><strong>定义组件</strong>：<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Vue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">component</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;my-component&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    template</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&lt;div&gt;A custom component!&lt;/div&gt;&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>Props 和 Events</strong>：父组件向子组件传递数据使用 props，子组件触发父组件的方法使用 events。</li></ul><h2 id="五、生命周期钩子" tabindex="-1"><a class="header-anchor" href="#五、生命周期钩子"><span>五、生命周期钩子</span></a></h2><p>了解 Vue 实例的生命周期钩子可以帮助你在特定时刻执行代码，比如 <code>created</code>, <code>mounted</code>, <code>updated</code>, <code>destroyed</code> 等。</p><h2 id="六、计算属性与侦听器" tabindex="-1"><a class="header-anchor" href="#六、计算属性与侦听器"><span>六、计算属性与侦听器</span></a></h2><ul><li><strong>计算属性 (Computed Properties)</strong>：当依赖的数据发生变化时自动更新视图，适合复杂逻辑的处理。</li><li><strong>侦听器 (Watchers)</strong>：监听数据变化并执行异步操作或开销较大的操作。</li></ul><h2 id="七、vuex-状态管理" tabindex="-1"><a class="header-anchor" href="#七、vuex-状态管理"><span>七、Vuex 状态管理</span></a></h2><p>Vuex 是 Vue 的官方状态管理模式，提供集中式的存储管理来确保状态以可预测的方式发生变化。</p><ul><li><strong>State</strong>：存放全局共享的状态。</li><li><strong>Mutations</strong>：同步修改 State 的唯一方式。</li><li><strong>Actions</strong>：提交 mutations，可用于处理异步操作。</li><li><strong>Getters</strong>：类似计算属性的功能，用于派生状态。</li></ul><h2 id="八、路由管理" tabindex="-1"><a class="header-anchor" href="#八、路由管理"><span>八、路由管理</span></a></h2><p>Vue Router 是 Vue.js 官方的路由管理器，它和 Vue.js 核心深度集成，让构建单页应用变得轻而易举。</p><ul><li><strong>动态路由匹配</strong>：根据 URL 参数加载不同的页面内容。</li><li><strong>导航守卫</strong>：控制页面跳转行为，可用于权限验证等场景。</li></ul><h2 id="九、高级特性" tabindex="-1"><a class="header-anchor" href="#九、高级特性"><span>九、高级特性</span></a></h2><ul><li><strong>渲染函数 &amp; JSX</strong>：对于复杂的 UI 结构，可以直接编写 JavaScript 渲染函数来创建虚拟 DOM。</li><li><strong>插件机制</strong>：Vue 支持插件扩展功能，例如 Vuex 和 Vue Router 都是作为插件使用的。</li><li><strong>TypeScript 支持</strong>：Vue 3 对 TypeScript 有良好的支持，有助于提高代码质量和开发效率。</li></ul><h2 id="十、性能优化" tabindex="-1"><a class="header-anchor" href="#十、性能优化"><span>十、性能优化</span></a></h2><ul><li><strong>懒加载组件</strong>：利用动态导入实现按需加载，减少初始加载时间。</li><li><strong>KeepAlive 组件</strong>：缓存不活跃的组件实例，避免重复渲染。</li></ul><h2 id="十一、测试与调试" tabindex="-1"><a class="header-anchor" href="#十一、测试与调试"><span>十一、测试与调试</span></a></h2><ul><li><strong>单元测试</strong>：Jest 或 Mocha 可用于编写 Vue 组件的单元测试。</li><li><strong>端到端测试</strong>：Cypress 或 TestCafe 提供了模拟用户交互的能力，用于全面测试应用程序。</li></ul><h2 id="十二、发布与部署" tabindex="-1"><a class="header-anchor" href="#十二、发布与部署"><span>十二、发布与部署</span></a></h2><ul><li><strong>生产环境构建</strong>：使用 <code>npm run build</code> 命令生成优化后的静态文件。</li><li><strong>服务器配置</strong>：选择合适的服务器（如 Nginx, Apache）进行部署，并配置相应的重写规则以支持 HTML5 History 模式下的路由。</li></ul><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语"><span>结语</span></a></h2><p>Vue.js 不仅简化了前端开发流程，还提供了强大的工具和丰富的生态系统，使得开发者能够更加专注于业务逻辑的实现。希望这篇笔记能为你提供一个完整的 Vue.js 学习路径，无论是初学者还是想要深入探索 Vue.js 的开发者都能从中受益。记住，实践是掌握任何技术的关键，尝试将所学知识应用于实际项目中吧！</p>`,29)]))}const o=i(t,[["render",l],["__file","index.html.vue"]]),p=JSON.parse('{"path":"/docs/program/frameworks/vue/","title":"Vue.js","lang":"zh-CN","frontmatter":{"description":"Vue.js 一、Vue简介 Vue.js 是一种用于构建用户界面的渐进式框架。与其他大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，并且非常容易上手，同时也方便与第三方库或现有项目整合。 二、安装与环境准备 CDN 方式：直接在 HTML 文件中通过 <script> 标签引入 Vue。 npm 安装：对于较大的...","head":[["meta",{"property":"og:url","content":"https://lhncxf.github.io/docs/program/frameworks/vue/"}],["meta",{"property":"og:site_name","content":"RTS Memoirs"}],["meta",{"property":"og:title","content":"Vue.js"}],["meta",{"property":"og:description","content":"Vue.js 一、Vue简介 Vue.js 是一种用于构建用户界面的渐进式框架。与其他大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，并且非常容易上手，同时也方便与第三方库或现有项目整合。 二、安装与环境准备 CDN 方式：直接在 HTML 文件中通过 <script> 标签引入 Vue。 npm 安装：对于较大的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-18T07:17:34.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-18T07:17:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue.js\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-18T07:17:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LHN\\",\\"url\\":\\"https://lhncxf.github.io\\",\\"email\\":\\"kobeluhaonan@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"一、Vue简介","slug":"一、vue简介","link":"#一、vue简介","children":[]},{"level":2,"title":"二、安装与环境准备","slug":"二、安装与环境准备","link":"#二、安装与环境准备","children":[]},{"level":2,"title":"三、基础概念","slug":"三、基础概念","link":"#三、基础概念","children":[]},{"level":2,"title":"四、组件化开发","slug":"四、组件化开发","link":"#四、组件化开发","children":[]},{"level":2,"title":"五、生命周期钩子","slug":"五、生命周期钩子","link":"#五、生命周期钩子","children":[]},{"level":2,"title":"六、计算属性与侦听器","slug":"六、计算属性与侦听器","link":"#六、计算属性与侦听器","children":[]},{"level":2,"title":"七、Vuex 状态管理","slug":"七、vuex-状态管理","link":"#七、vuex-状态管理","children":[]},{"level":2,"title":"八、路由管理","slug":"八、路由管理","link":"#八、路由管理","children":[]},{"level":2,"title":"九、高级特性","slug":"九、高级特性","link":"#九、高级特性","children":[]},{"level":2,"title":"十、性能优化","slug":"十、性能优化","link":"#十、性能优化","children":[]},{"level":2,"title":"十一、测试与调试","slug":"十一、测试与调试","link":"#十一、测试与调试","children":[]},{"level":2,"title":"十二、发布与部署","slug":"十二、发布与部署","link":"#十二、发布与部署","children":[]},{"level":2,"title":"结语","slug":"结语","link":"#结语","children":[]}],"git":{"createdTime":1739863054000,"updatedTime":1739863054000,"contributors":[{"name":"Kobe.Lu","username":"Kobe.Lu","email":"kobeluhaonan@gmail.com","commits":1,"url":"https://github.com/Kobe.Lu"}]},"readingTime":{"minutes":3.39,"words":1016},"filePathRelative":"docs/program/frameworks/vue/index.md","localizedDate":"2025年2月18日","excerpt":"\\n<h2>一、Vue简介</h2>\\n<p>Vue.js 是一种用于构建用户界面的渐进式框架。与其他大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，并且非常容易上手，同时也方便与第三方库或现有项目整合。</p>\\n<h2>二、安装与环境准备</h2>\\n<ul>\\n<li><strong>CDN 方式</strong>：直接在 HTML 文件中通过 <code>&lt;script&gt;</code> 标签引入 Vue。</li>\\n<li><strong>npm 安装</strong>：对于较大的项目，推荐使用 npm 来安装 Vue，以便更好地管理依赖和使用构建工具（如 Webpack）。<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">npm</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> install</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> vue</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li><strong>Vue CLI</strong>：Vue 提供了官方命令行工具 Vue CLI，帮助快速搭建基于 Vue 的项目架构。<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">npm</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> install</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -g</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> @vue/cli</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">vue</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> create</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> my-project</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>","autoDesc":true}');export{o as comp,p as data};
