import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as n,o as l}from"./app-CpGNV3hS.js";const e={};function t(h,i){return l(),a("div",null,i[0]||(i[0]=[n(`<h1 id="electron" tabindex="-1"><a class="header-anchor" href="#electron"><span>Electron</span></a></h1><h2 id="一、electron简介" tabindex="-1"><a class="header-anchor" href="#一、electron简介"><span>一、Electron简介</span></a></h2><p>Electron 是一个使用 Web 技术（HTML, CSS 和 JavaScript）构建跨平台桌面应用程序的框架。它结合了 Chromium 渲染引擎和 Node.js 运行时，使得开发者可以利用熟悉的前端技术栈来开发功能丰富的桌面应用。</p><h2 id="二、安装与环境配置" tabindex="-1"><a class="header-anchor" href="#二、安装与环境配置"><span>二、安装与环境配置</span></a></h2><ul><li><strong>Node.js</strong>: Electron 基于 Node.js，因此首先需要确保已经安装了 Node.js。</li><li><strong>初始化项目</strong>: 使用 <code>npm init</code> 初始化一个新的 npm 项目，并在其中添加 Electron 依赖：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> electron</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --save-dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>创建主进程文件</strong> (<code>main.js</code>)：这是 Electron 应用程序的入口点，负责创建窗口、处理系统事件等。</li></ul><h2 id="三、基本概念" tabindex="-1"><a class="header-anchor" href="#三、基本概念"><span>三、基本概念</span></a></h2><ol><li><p><strong>主进程 vs 渲染进程</strong></p><ul><li>主进程：运行 <code>main.js</code> 的进程，管理所有浏览器窗口及应用生命周期。</li><li>渲染进程：每个 Electron 窗口都是一个独立的渲染进程，类似于浏览器标签页，主要用于展示用户界面。</li></ul></li><li><p><strong>BrowserWindow</strong>: 创建并控制浏览器窗口的模块。</p></li><li><p><strong>ipcMain &amp; ipcRenderer</strong>: 实现主进程与渲染进程之间的通信。</p></li></ol><h2 id="四、快速开始" tabindex="-1"><a class="header-anchor" href="#四、快速开始"><span>四、快速开始</span></a></h2><p>创建一个简单的 Electron 应用：</p><ol><li><p>在 <code>package.json</code> 中定义启动脚本：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;scripts&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;start&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;electron .&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>main.js</code> 示例代码：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">BrowserWindow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;electron&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> createWindow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> win</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> BrowserWindow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        width</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 800</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        height</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        webPreferences</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            nodeIntegration</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    win</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">loadFile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;index.html&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">whenReady</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">then</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">createWindow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;window-all-closed&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">platform</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> !==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;darwin&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">quit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>index.html</code> 示例内容：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;!</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">DOCTYPE</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;My Electron App&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Welcome to My Electron App!&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="五、高级特性" tabindex="-1"><a class="header-anchor" href="#五、高级特性"><span>五、高级特性</span></a></h2><ol><li><strong>自动更新</strong>: 使用 <code>electron-updater</code> 模块实现应用的自动更新功能。</li><li><strong>调试工具</strong>: 集成 Chrome DevTools，便于调试应用中的问题。</li><li><strong>打包发布</strong>: 使用 <code>electron-builder</code> 或 <code>electron-packager</code> 将应用打包为可执行文件，支持 Windows, macOS 和 Linux 平台。</li><li><strong>安全性考虑</strong>: 注意设置合理的权限限制，避免使用不安全的 API，定期检查依赖的安全性。</li></ol><h2 id="六、最佳实践" tabindex="-1"><a class="header-anchor" href="#六、最佳实践"><span>六、最佳实践</span></a></h2><ul><li><strong>性能优化</strong>: 减少不必要的资源加载，合理管理内存使用。</li><li><strong>用户体验</strong>: 提供一致且直观的用户界面，考虑不同操作系统下的用户体验差异。</li><li><strong>测试</strong>: 编写单元测试和集成测试，保证代码质量。</li></ul><h2 id="七、案例分析" tabindex="-1"><a class="header-anchor" href="#七、案例分析"><span>七、案例分析</span></a></h2><ul><li><strong>VS Code</strong>: Microsoft 的开源代码编辑器，展示了如何利用 Electron 构建复杂且高效的桌面应用。</li><li><strong>Slack</strong>: 团队协作工具的一个例子，说明了如何将 Web 技术与桌面应用需求相结合。</li></ul><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语"><span>结语</span></a></h2><p>通过 Electron，前端工程师可以轻松地将他们的技能应用于桌面应用开发领域。掌握 Electron 不仅拓宽了你的技术视野，也为解决特定的业务需求提供了新的途径。希望这篇笔记能为你提供一个全面的学习路径，帮助你在 Electron 的世界里不断进步。记住，实际操作和项目经验是掌握任何新技术的关键，所以不要犹豫，开始你的第一个 Electron 项目吧！</p>`,18)]))}const k=s(e,[["render",t],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/docs/program/electron/","title":"Electron","lang":"zh-CN","frontmatter":{"description":"Electron 一、Electron简介 Electron 是一个使用 Web 技术（HTML, CSS 和 JavaScript）构建跨平台桌面应用程序的框架。它结合了 Chromium 渲染引擎和 Node.js 运行时，使得开发者可以利用熟悉的前端技术栈来开发功能丰富的桌面应用。 二、安装与环境配置 Node.js: Electron 基于 N...","head":[["meta",{"property":"og:url","content":"https://lhncxf.github.io/docs/program/electron/"}],["meta",{"property":"og:site_name","content":"RTS Memoirs"}],["meta",{"property":"og:title","content":"Electron"}],["meta",{"property":"og:description","content":"Electron 一、Electron简介 Electron 是一个使用 Web 技术（HTML, CSS 和 JavaScript）构建跨平台桌面应用程序的框架。它结合了 Chromium 渲染引擎和 Node.js 运行时，使得开发者可以利用熟悉的前端技术栈来开发功能丰富的桌面应用。 二、安装与环境配置 Node.js: Electron 基于 N..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-18T07:17:34.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-18T07:17:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Electron\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-18T07:17:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LHN\\",\\"url\\":\\"https://lhncxf.github.io\\",\\"email\\":\\"kobeluhaonan@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"一、Electron简介","slug":"一、electron简介","link":"#一、electron简介","children":[]},{"level":2,"title":"二、安装与环境配置","slug":"二、安装与环境配置","link":"#二、安装与环境配置","children":[]},{"level":2,"title":"三、基本概念","slug":"三、基本概念","link":"#三、基本概念","children":[]},{"level":2,"title":"四、快速开始","slug":"四、快速开始","link":"#四、快速开始","children":[]},{"level":2,"title":"五、高级特性","slug":"五、高级特性","link":"#五、高级特性","children":[]},{"level":2,"title":"六、最佳实践","slug":"六、最佳实践","link":"#六、最佳实践","children":[]},{"level":2,"title":"七、案例分析","slug":"七、案例分析","link":"#七、案例分析","children":[]},{"level":2,"title":"结语","slug":"结语","link":"#结语","children":[]}],"git":{"createdTime":1739863054000,"updatedTime":1739863054000,"contributors":[{"name":"Kobe.Lu","username":"Kobe.Lu","email":"kobeluhaonan@gmail.com","commits":1,"url":"https://github.com/Kobe.Lu"}]},"readingTime":{"minutes":2.56,"words":768},"filePathRelative":"docs/program/electron/index.md","localizedDate":"2025年2月18日","excerpt":"\\n<h2>一、Electron简介</h2>\\n<p>Electron 是一个使用 Web 技术（HTML, CSS 和 JavaScript）构建跨平台桌面应用程序的框架。它结合了 Chromium 渲染引擎和 Node.js 运行时，使得开发者可以利用熟悉的前端技术栈来开发功能丰富的桌面应用。</p>\\n<h2>二、安装与环境配置</h2>\\n<ul>\\n<li><strong>Node.js</strong>: Electron 基于 Node.js，因此首先需要确保已经安装了 Node.js。</li>\\n<li><strong>初始化项目</strong>: 使用 <code>npm init</code> 初始化一个新的 npm 项目，并在其中添加 Electron 依赖：<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">npm</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> install</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> electron</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> --save-dev</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li><strong>创建主进程文件</strong> (<code>main.js</code>)：这是 Electron 应用程序的入口点，负责创建窗口、处理系统事件等。</li>\\n</ul>","autoDesc":true}');export{k as comp,d as data};
