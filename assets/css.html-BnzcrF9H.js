import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,b as a,o as l}from"./app-BMTw2XUa.js";const n={};function t(d,i){return l(),e("div",null,i[0]||(i[0]=[a(`<h1 id="css" tabindex="-1"><a class="header-anchor" href="#css"><span>CSS</span></a></h1><h2 id="一、css基础" tabindex="-1"><a class="header-anchor" href="#一、css基础"><span>一、CSS基础</span></a></h2><p><strong>什么是CSS？</strong></p><ul><li>CSS（<span class="marker-text">层叠样式表</span>）是一种用来表现HTML或XML等文件样式的计算机语言。通过CSS，可以控制网页的外观和格式，包括布局、颜色、字体等。</li></ul><p><strong>如何引入CSS？</strong></p><ol><li><strong>内联样式</strong>：直接在HTML元素中使用<code>style</code>属性。</li><li><strong>内部样式表</strong>：在HTML文档的<code>&lt;head&gt;</code>部分使用<code>&lt;style&gt;</code>标签定义样式。</li><li><strong>外部样式表</strong>：创建一个<code>.css</code>文件，并在HTML文档中用<code>&lt;link&gt;</code>标签引用。</li></ol><h2 id="二、选择器" tabindex="-1"><a class="header-anchor" href="#二、选择器"><span>二、选择器</span></a></h2><h3 id="_1-基本选择器" tabindex="-1"><a class="header-anchor" href="#_1-基本选择器"><span><strong>1. 基本选择器</strong></span></a></h3><p>这些是最基础的选择器，用于匹配特定类型的HTML元素。</p><ul><li><p><strong>元素选择器（Type Selector）</strong><br> 匹配指定的HTML标签。<br> 示例：<code>p { color: red; }</code> （匹配所有 <code>&lt;p&gt;</code> 标签）</p></li><li><p><strong>类选择器（Class Selector）</strong><br> 匹配具有指定类名的元素。<br> 示例：<code>.warning { color: orange; }</code> （匹配所有 <code>class=&quot;warning&quot;</code> 的元素）</p></li><li><p><strong>ID选择器（ID Selector）</strong><br> 匹配具有指定ID的单个元素。<br> 示例：<code>#header { font-size: 24px; }</code> （匹配 <code>id=&quot;header&quot;</code> 的元素）</p></li><li><p><strong>通配符选择器（Universal Selector）</strong><br> 匹配文档中的所有元素。<br> 示例：<code>* { margin: 0; padding: 0; }</code></p></li></ul><hr><h3 id="_2-属性选择器" tabindex="-1"><a class="header-anchor" href="#_2-属性选择器"><span><strong>2. 属性选择器</strong></span></a></h3><p>通过元素的属性或属性值进行匹配。</p><ul><li><p><code>[attr]</code><br> 匹配具有指定属性的元素。<br> 示例：<code>[type] { border: 1px solid black; }</code> （匹配所有具有 <code>type</code> 属性的元素）</p></li><li><p><code>[attr=value]</code><br> 匹配属性值完全等于指定值的元素。<br> 示例：<code>[type=&quot;text&quot;] { width: 200px; }</code></p></li><li><p><code>[attr~=&quot;value&quot;]</code><br> 匹配属性值包含指定单词（以空格分隔）的元素。<br> 示例：<code>[class~=&quot;btn&quot;] { background-color: blue; }</code></p></li><li><p><code>[attr|=&quot;value&quot;]</code><br> 匹配属性值以指定值开头且后跟连字符的元素。<br> 示例：<code>[lang|=&quot;en&quot;] { color: green; }</code></p></li><li><p><code>[attr^=&quot;value&quot;]</code><br> 匹配属性值以指定字符串开头的元素。<br> 示例：<code>[href^=&quot;https&quot;] { text-decoration: underline; }</code></p></li><li><p><code>[attr$=&quot;value&quot;]</code><br> 匹配属性值以指定字符串结尾的元素。<br> 示例：<code>[href$=&quot;.pdf&quot;] { color: red; }</code></p></li><li><p><code>[attr*=&quot;value&quot;]</code><br> 匹配属性值包含指定字符串的元素。<br> 示例：<code>[title*=&quot;important&quot;] { font-weight: bold; }</code></p></li></ul><hr><h3 id="_3-伪类选择器" tabindex="-1"><a class="header-anchor" href="#_3-伪类选择器"><span><strong>3. 伪类选择器</strong></span></a></h3><p>用于选择处于特定状态的元素。</p><ul><li><p><strong>链接伪类</strong></p><ul><li><code>a:link</code>：未访问的链接</li><li><code>a:visited</code>：已访问的链接</li><li><code>a:hover</code>：鼠标悬停时的链接</li><li><code>a:active</code>：被激活的链接</li></ul></li><li><p><strong>动态伪类</strong></p><ul><li><code>:focus</code>：获得焦点的元素<br> 示例：<code>input:focus { outline: 2px solid blue; }</code></li><li><code>:hover</code>：鼠标悬停的元素<br> 示例：<code>button:hover { background-color: gray; }</code></li></ul></li><li><p><strong>结构伪类</strong></p><ul><li><code>:first-child</code>：匹配作为其父元素的第一个子元素的元素<br> 示例：<code>li:first-child { font-weight: bold; }</code></li><li><code>:last-child</code>：匹配作为其父元素的最后一个子元素的元素<br> 示例：<code>li:last-child { color: red; }</code></li><li><code>:nth-child(n)</code>：匹配其父元素下的第n个子元素<br> 示例：<code>tr:nth-child(odd) { background-color: #f2f2f2; }</code></li><li><code>:only-child</code>：匹配没有兄弟元素的元素<br> 示例：<code>p:only-child { margin-top: 20px; }</code></li></ul></li><li><p><strong>UI伪类</strong></p><ul><li><code>:checked</code>：匹配被选中的复选框或单选按钮<br> 示例：<code>input:checked { border: 2px solid green; }</code></li><li><code>:disabled</code>：匹配被禁用的表单元素<br> 示例：<code>button:disabled { opacity: 0.5; }</code></li></ul></li></ul><hr><h3 id="_4-伪元素选择器" tabindex="-1"><a class="header-anchor" href="#_4-伪元素选择器"><span><strong>4. 伪元素选择器</strong></span></a></h3><p>用于选择元素的特定部分。</p><ul><li><p><code>::before</code> 和 <code>::after</code><br> 在元素内容前后插入生成的内容。<br> 示例：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">::before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  content: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;注意：&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>::first-line</code><br> 匹配段落的第一行文本。<br> 示例：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">::first-line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  font-weight: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">bold</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>::first-letter</code><br> 匹配段落的第一个字母。<br> 示例：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">::first-letter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  font-size: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">em</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>::selection</code><br> 匹配用户选中的文本。<br> 示例：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">::selection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  background-color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">yellow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><hr><h3 id="_5-组合选择器" tabindex="-1"><a class="header-anchor" href="#_5-组合选择器"><span><strong>5. 组合选择器</strong></span></a></h3><p>通过组合多个选择器来实现更精确的选择。</p><ul><li><p><strong>后代选择器</strong><br> 匹配某个元素内的所有后代元素。<br> 示例：<code>div p { color: blue; }</code> （匹配 <code>&lt;div&gt;</code> 内的所有 <code>&lt;p&gt;</code> 元素）</p></li><li><p><strong>子选择器</strong><br> 匹配直接子元素。<br> 示例：<code>ul &gt; li { font-weight: bold; }</code> （匹配 <code>&lt;ul&gt;</code> 的直接子 <code>&lt;li&gt;</code> 元素）</p></li><li><p><strong>相邻兄弟选择器</strong><br> 匹配紧接在另一个元素后的兄弟元素。<br> 示例：<code>h1 + p { margin-top: 0; }</code> （匹配紧跟在 <code>&lt;h1&gt;</code> 后的 <code>&lt;p&gt;</code> 元素）</p></li><li><p><strong>通用兄弟选择器</strong><br> 匹配某个元素之后的所有兄弟元素。<br> 示例：<code>h1 ~ p { color: gray; }</code> （匹配 <code>&lt;h1&gt;</code> 后的所有 <code>&lt;p&gt;</code> 元素）</p></li></ul><hr><h3 id="_6-优先级规则" tabindex="-1"><a class="header-anchor" href="#_6-优先级规则"><span><strong>6. 优先级规则</strong></span></a></h3><p>CSS选择器有不同的优先级，具体规则如下（从高到低）：</p><ol><li><strong>内联样式</strong></li><li><strong>ID选择器</strong></li><li><strong>类选择器、属性选择器和伪类选择器</strong></li><li><strong>元素选择器和伪元素选择器</strong></li><li><strong>通配符选择器</strong></li></ol><p>当优先级相同时，后者会覆盖前者。</p><h2 id="三、盒模型" tabindex="-1"><a class="header-anchor" href="#三、盒模型"><span>三、盒模型</span></a></h2><h3 id="_1-css盒模型概述" tabindex="-1"><a class="header-anchor" href="#_1-css盒模型概述"><span><strong>1. CSS盒模型概述</strong></span></a></h3><p>在CSS中，每个HTML元素都被视为一个矩形的盒子（Box），这个盒子由内容区域（content）、内边距（padding）、边框（border）和外边距（margin）组成。盒模型是CSS布局的核心概念。</p><h3 id="_2-盒模型的组成部分" tabindex="-1"><a class="header-anchor" href="#_2-盒模型的组成部分"><span><strong>2. 盒模型的组成部分</strong></span></a></h3><h4 id="_1-内容区域-content" tabindex="-1"><a class="header-anchor" href="#_1-内容区域-content"><span><strong>(1) 内容区域（Content）</strong></span></a></h4><ul><li>内容区域是盒子的核心部分，用于放置文本、图片或其他内容。</li><li>它的大小由 <code>width</code> 和 <code>height</code> 属性定义。</li></ul><h4 id="_2-内边距-padding" tabindex="-1"><a class="header-anchor" href="#_2-内边距-padding"><span><strong>(2) 内边距（Padding）</strong></span></a></h4><ul><li>内边距位于内容区域和边框之间，用于控制内容与边框之间的间距。</li><li>可以通过 <code>padding</code> 或 <code>padding-top</code>、<code>padding-right</code>、<code>padding-bottom</code>、<code>padding-left</code> 等属性设置。</li></ul><h4 id="_3-边框-border" tabindex="-1"><a class="header-anchor" href="#_3-边框-border"><span><strong>(3) 边框（Border）</strong></span></a></h4><ul><li>边框围绕内容区域和内边距，用于定义盒子的边界。</li><li>可以通过 <code>border</code> 或 <code>border-width</code>、<code>border-style</code>、<code>border-color</code> 等属性设置。</li></ul><h4 id="_4-外边距-margin" tabindex="-1"><a class="header-anchor" href="#_4-外边距-margin"><span><strong>(4) 外边距（Margin）</strong></span></a></h4><ul><li>外边距位于边框之外，用于控制盒子与其他盒子之间的间距。</li><li>可以通过 <code>margin</code> 或 <code>margin-top</code>、<code>margin-right</code>、<code>margin-bottom</code>、<code>margin-left</code> 等属性设置。</li></ul><hr><h3 id="_3-盒模型的两种类型" tabindex="-1"><a class="header-anchor" href="#_3-盒模型的两种类型"><span><strong>3. 盒模型的两种类型</strong></span></a></h3><h4 id="_1-标准盒模型-w3c标准" tabindex="-1"><a class="header-anchor" href="#_1-标准盒模型-w3c标准"><span><strong>(1) 标准盒模型（W3C标准）</strong></span></a></h4><ul><li>在标准盒模型中，元素的宽度和高度仅包括内容区域（content），不包含内边距（padding）和边框（border）。</li><li>示例：<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  width: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">200</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  height: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  padding: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  border: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> solid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> black</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>实际宽度 = <code>200px + 2 * 20px + 2 * 5px = 250px</code></li><li>实际高度 = <code>100px + 2 * 20px + 2 * 5px = 150px</code></li></ul></li></ul><h4 id="_2-ie盒模型-quirks模式" tabindex="-1"><a class="header-anchor" href="#_2-ie盒模型-quirks模式"><span><strong>(2) IE盒模型（Quirks模式）</strong></span></a></h4><ul><li>在IE盒模型中，元素的宽度和高度包括内容区域、内边距和边框。</li><li>示例：<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  width: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">200</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  height: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  padding: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  border: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> solid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> black</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>实际宽度 = <code>200px</code>（包括 <code>content</code>、<code>padding</code> 和 <code>border</code>）</li><li>实际高度 = <code>100px</code>（包括 <code>content</code>、<code>padding</code> 和 <code>border</code>）</li></ul></li></ul><hr><h3 id="_4-切换盒模型" tabindex="-1"><a class="header-anchor" href="#_4-切换盒模型"><span><strong>4. 切换盒模型</strong></span></a></h3><p>可以通过 <code>box-sizing</code> 属性切换盒模型的计算方式。</p><ul><li><p><strong><code>box-sizing: content-box;</code></strong><br> 使用标准盒模型（默认值）。<br> 示例：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  box-sizing: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">content-box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  width: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">200</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  padding: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  border: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> solid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> black</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong><code>box-sizing: border-box;</code></strong><br> 使用IE盒模型，宽度和高度包括内容区域、内边距和边框。<br> 示例：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  box-sizing: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">border-box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  width: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">200</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  padding: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  border: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> solid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> black</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>此时，<code>content</code> 的实际宽度为 <code>200px - (2 * 20px + 2 * 5px) = 150px</code></li></ul></li></ul><hr><h3 id="_5-盒模型的布局规则" tabindex="-1"><a class="header-anchor" href="#_5-盒模型的布局规则"><span><strong>5. 盒模型的布局规则</strong></span></a></h3><h4 id="_1-垂直方向上的边距折叠-margin-collapse" tabindex="-1"><a class="header-anchor" href="#_1-垂直方向上的边距折叠-margin-collapse"><span><strong>(1) 垂直方向上的边距折叠（Margin Collapse）</strong></span></a></h4><ul><li>当两个垂直外边距相遇时，它们会合并为一个外边距，取两者中的较大值。</li><li>示例：<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  margin-top: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  margin-bottom: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">30</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果两个相邻的 <code>div</code> 元素的 <code>margin-bottom</code> 和 <code>margin-top</code> 相遇，则最终的外边距为较大的那个值（30px）。</li></ul></li></ul><h4 id="_2-水平方向上的外边距不会折叠" tabindex="-1"><a class="header-anchor" href="#_2-水平方向上的外边距不会折叠"><span><strong>(2) 水平方向上的外边距不会折叠</strong></span></a></h4><ul><li>水平方向上的外边距始终相加，不会发生折叠。</li></ul><h4 id="_3-浮动和绝对定位的影响" tabindex="-1"><a class="header-anchor" href="#_3-浮动和绝对定位的影响"><span><strong>(3) 浮动和绝对定位的影响</strong></span></a></h4><ul><li>当元素浮动或使用绝对定位时，盒模型的外边距不会与其他元素的外边距发生折叠。</li></ul><hr><h3 id="_6-盒模型的应用场景" tabindex="-1"><a class="header-anchor" href="#_6-盒模型的应用场景"><span><strong>6. 盒模型的应用场景</strong></span></a></h3><h4 id="_1-使用-box-sizing-border-box-的优势" tabindex="-1"><a class="header-anchor" href="#_1-使用-box-sizing-border-box-的优势"><span><strong>(1) 使用 <code>box-sizing: border-box;</code> 的优势</strong></span></a></h4><ul><li>在设计固定宽度的布局时，<code>box-sizing: border-box;</code> 更加直观，因为它将 <code>padding</code> 和 <code>border</code> 包含在 <code>width</code> 和 <code>height</code> 中。</li><li>示例：<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  box-sizing: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">border-box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_2-解决盒模型问题" tabindex="-1"><a class="header-anchor" href="#_2-解决盒模型问题"><span><strong>(2) 解决盒模型问题</strong></span></a></h4><ul><li>避免因不同浏览器对盒模型的解析差异导致的布局问题，通常通过设置 <code>box-sizing</code> 来统一盒模型。</li></ul><hr><p>以上是CSS盒模型的主要内容总结，希望对你有所帮助！如果需要进一步补充，请告诉我。</p><h2 id="四、布局" tabindex="-1"><a class="header-anchor" href="#四、布局"><span>四、布局</span></a></h2><ul><li><strong>浮动（float）</strong>：允许元素向左或向右移动，直到它的外边缘碰到包含块或另一个浮动元素的边缘。</li><li><strong>定位（position）</strong>：有static、relative、absolute、fixed四种值，决定了元素如何定位。</li><li><strong>Flexbox</strong>：一种一维布局方法，提供了更有效的布局方式，特别是对于响应式设计。</li><li><strong>Grid</strong>：二维布局系统，能够更加精确地控制行与列的布局。</li></ul><h2 id="五、高级特性" tabindex="-1"><a class="header-anchor" href="#五、高级特性"><span>五、高级特性</span></a></h2><ul><li><strong>媒体查询</strong>：使页面可以根据设备的特性（如宽度、高度、分辨率等）应用不同的样式，实现响应式设计。</li><li><strong>变量（自定义属性）</strong>：使用<code>--variable-name</code>定义，<code>var(--variable-name)</code>调用，可以在整个文档中复用样式值。</li><li><strong>动画与过渡</strong>：通过<code>@keyframes</code>规则定义动画序列，使用<code>transition</code>属性平滑地改变属性值。</li></ul><h2 id="六、优化与最佳实践" tabindex="-1"><a class="header-anchor" href="#六、优化与最佳实践"><span>六、优化与最佳实践</span></a></h2><ul><li><strong>性能优化</strong>：减少CSS文件大小，合并多个CSS文件为一个，避免使用过时的CSS hacks。</li><li><strong>代码组织</strong>：采用BEM(Block Element Modifier)命名法或SMACSS等方法论保持代码清晰可维护。</li><li><strong>浏览器兼容性</strong>：了解并处理不同浏览器之间的差异，必要时使用Autoprefixer自动添加厂商前缀。</li></ul><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语"><span>结语</span></a></h2><p>CSS不仅是前端开发的重要组成部分，也是创造美观、功能性强且用户友好的网站的关键因素之一。随着Web技术的发展，新的特性和工具不断涌现，作为前端工程师，持续学习和适应这些变化是非常重要的。希望这篇笔记能为你提供一个全面的学习路径，帮助你在CSS的世界里走得更远。</p>`,77)]))}const o=s(n,[["render",t],["__file","css.html.vue"]]),p=JSON.parse('{"path":"/docs/program/basic/css.html","title":"CSS","lang":"zh-CN","frontmatter":{"description":"CSS 一、CSS基础 什么是CSS？ CSS（层叠样式表）是一种用来表现HTML或XML等文件样式的计算机语言。通过CSS，可以控制网页的外观和格式，包括布局、颜色、字体等。 如何引入CSS？ 内联样式：直接在HTML元素中使用style属性。 内部样式表：在HTML文档的<head>部分使用<style>标签定义样式。 外部样式表：创建一个.css...","head":[["meta",{"property":"og:url","content":"https://lhncxf.github.io/docs/program/basic/css.html"}],["meta",{"property":"og:site_name","content":"RTS Memoirs"}],["meta",{"property":"og:title","content":"CSS"}],["meta",{"property":"og:description","content":"CSS 一、CSS基础 什么是CSS？ CSS（层叠样式表）是一种用来表现HTML或XML等文件样式的计算机语言。通过CSS，可以控制网页的外观和格式，包括布局、颜色、字体等。 如何引入CSS？ 内联样式：直接在HTML元素中使用style属性。 内部样式表：在HTML文档的<head>部分使用<style>标签定义样式。 外部样式表：创建一个.css..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-19T02:18:41.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-19T02:18:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSS\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-19T02:18:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LHN\\",\\"url\\":\\"https://lhncxf.github.io\\",\\"email\\":\\"kobeluhaonan@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"一、CSS基础","slug":"一、css基础","link":"#一、css基础","children":[]},{"level":2,"title":"二、选择器","slug":"二、选择器","link":"#二、选择器","children":[{"level":3,"title":"1. 基本选择器","slug":"_1-基本选择器","link":"#_1-基本选择器","children":[]},{"level":3,"title":"2. 属性选择器","slug":"_2-属性选择器","link":"#_2-属性选择器","children":[]},{"level":3,"title":"3. 伪类选择器","slug":"_3-伪类选择器","link":"#_3-伪类选择器","children":[]},{"level":3,"title":"4. 伪元素选择器","slug":"_4-伪元素选择器","link":"#_4-伪元素选择器","children":[]},{"level":3,"title":"5. 组合选择器","slug":"_5-组合选择器","link":"#_5-组合选择器","children":[]},{"level":3,"title":"6. 优先级规则","slug":"_6-优先级规则","link":"#_6-优先级规则","children":[]}]},{"level":2,"title":"三、盒模型","slug":"三、盒模型","link":"#三、盒模型","children":[{"level":3,"title":"1. CSS盒模型概述","slug":"_1-css盒模型概述","link":"#_1-css盒模型概述","children":[]},{"level":3,"title":"2. 盒模型的组成部分","slug":"_2-盒模型的组成部分","link":"#_2-盒模型的组成部分","children":[]},{"level":3,"title":"3. 盒模型的两种类型","slug":"_3-盒模型的两种类型","link":"#_3-盒模型的两种类型","children":[]},{"level":3,"title":"4. 切换盒模型","slug":"_4-切换盒模型","link":"#_4-切换盒模型","children":[]},{"level":3,"title":"5. 盒模型的布局规则","slug":"_5-盒模型的布局规则","link":"#_5-盒模型的布局规则","children":[]},{"level":3,"title":"6. 盒模型的应用场景","slug":"_6-盒模型的应用场景","link":"#_6-盒模型的应用场景","children":[]}]},{"level":2,"title":"四、布局","slug":"四、布局","link":"#四、布局","children":[]},{"level":2,"title":"五、高级特性","slug":"五、高级特性","link":"#五、高级特性","children":[]},{"level":2,"title":"六、优化与最佳实践","slug":"六、优化与最佳实践","link":"#六、优化与最佳实践","children":[]},{"level":2,"title":"结语","slug":"结语","link":"#结语","children":[]}],"git":{"createdTime":1739863054000,"updatedTime":1739931521000,"contributors":[{"name":"Kobe.Lu","username":"Kobe.Lu","email":"kobeluhaonan@gmail.com","commits":2,"url":"https://github.com/Kobe.Lu"}]},"readingTime":{"minutes":7.87,"words":2362},"filePathRelative":"docs/program/basic/css.md","localizedDate":"2025年2月18日","excerpt":"\\n<h2>一、CSS基础</h2>\\n<p><strong>什么是CSS？</strong></p>\\n<ul>\\n<li>CSS（<span class=\\"marker-text\\">层叠样式表</span>）是一种用来表现HTML或XML等文件样式的计算机语言。通过CSS，可以控制网页的外观和格式，包括布局、颜色、字体等。</li>\\n</ul>\\n<p><strong>如何引入CSS？</strong></p>\\n<ol>\\n<li><strong>内联样式</strong>：直接在HTML元素中使用<code>style</code>属性。</li>\\n<li><strong>内部样式表</strong>：在HTML文档的<code>&lt;head&gt;</code>部分使用<code>&lt;style&gt;</code>标签定义样式。</li>\\n<li><strong>外部样式表</strong>：创建一个<code>.css</code>文件，并在HTML文档中用<code>&lt;link&gt;</code>标签引用。</li>\\n</ol>","autoDesc":true}');export{o as comp,p as data};
