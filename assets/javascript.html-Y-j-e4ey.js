import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as o,o as l}from"./app-C7lxUTbB.js";const i={};function r(n,e){return l(),a("div",null,e[0]||(e[0]=[o('<h1 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript"><span>JavaScript</span></a></h1><h2 id="一、javascript简介" tabindex="-1"><a class="header-anchor" href="#一、javascript简介"><span>一、JavaScript简介</span></a></h2><p>JavaScript是一种广泛用于网页开发的脚本语言，支持事件驱动、函数式及基于原型的编程风格。它不仅限于浏览器环境，在服务器端（如Node.js）、移动应用开发（React Native, Ionic等）也有广泛应用。</p><h2 id="二、基础语法" tabindex="-1"><a class="header-anchor" href="#二、基础语法"><span>二、基础语法</span></a></h2><ul><li><strong>变量声明</strong>：使用<code>var</code>, <code>let</code>, <code>const</code>来声明变量。其中<code>let</code>和<code>const</code>是ES6新增的关键字，分别用于块级作用域变量和常量。</li><li><strong>数据类型</strong>：包括原始类型（Undefined, Null, Boolean, Number, String, Symbol）和引用类型（Object）。</li><li><strong>操作符</strong>：算术操作符（+,-,*,/,%），比较操作符（==, =<mark>, !=, !</mark>, &lt;, &gt;, &lt;=, &gt;=），逻辑操作符（&amp;&amp;, ||, !）等。</li></ul><h2 id="三、控制结构" tabindex="-1"><a class="header-anchor" href="#三、控制结构"><span>三、控制结构</span></a></h2><ul><li><strong>条件语句</strong>：<code>if...else</code>, <code>switch</code></li><li><strong>循环语句</strong>：<code>for</code>, <code>while</code>, <code>do...while</code>, <code>for...in</code>, <code>for...of</code></li></ul><h2 id="四、函数与作用域" tabindex="-1"><a class="header-anchor" href="#四、函数与作用域"><span>四、函数与作用域</span></a></h2><ul><li><strong>定义函数</strong>：可以使用函数声明或函数表达式两种方式。</li><li><strong>箭头函数</strong>：ES6引入的新特性，简化了函数的书写形式，并且在处理this指向时更为直观。</li><li><strong>闭包</strong>：一个函数能够记住并访问它的词法作用域，即使这个函数在其词法作用域之外执行。</li></ul><h2 id="五、dom操作" tabindex="-1"><a class="header-anchor" href="#五、dom操作"><span>五、DOM操作</span></a></h2><p>Document Object Model (DOM) 是HTML和XML文档的编程接口。通过JavaScript可以动态地访问和更新文档的内容、结构和样式。</p><ul><li><strong>选择元素</strong>：<code>document.getElementById()</code>, <code>document.getElementsByClassName()</code>, <code>document.getElementsByTagName()</code>, <code>document.querySelector()</code>, <code>document.querySelectorAll()</code></li><li><strong>修改内容</strong>：<code>.innerHTML</code>, <code>.textContent</code></li><li><strong>添加/删除节点</strong>：<code>.appendChild()</code>, <code>.removeChild()</code></li></ul><h2 id="六、事件处理" tabindex="-1"><a class="header-anchor" href="#六、事件处理"><span>六、事件处理</span></a></h2><ul><li><strong>绑定事件</strong>：直接在HTML中使用<code>onclick</code>等属性，或者通过JavaScript使用<code>.addEventListener()</code>方法。</li><li><strong>事件冒泡与捕获</strong>：理解这两种机制有助于更精确地控制事件流。</li></ul><h2 id="七、异步编程" tabindex="-1"><a class="header-anchor" href="#七、异步编程"><span>七、异步编程</span></a></h2><ul><li><strong>回调函数</strong>：用于处理异步操作的结果。</li><li><strong>Promise</strong>：提供了一种更清晰的方式来处理异步操作，避免“回调地狱”。</li><li><strong>Async/Await</strong>：ES8引入的特性，使异步代码看起来更像同步代码，易于阅读和维护。</li></ul><h2 id="八、高级主题" tabindex="-1"><a class="header-anchor" href="#八、高级主题"><span>八、高级主题</span></a></h2><ul><li><strong>模块化</strong>：使用<code>import</code>和<code>export</code>关键字实现代码分割和重用。</li><li><strong>类与继承</strong>：ES6之后，JavaScript支持基于类的面向对象编程。</li><li><strong>错误处理</strong>：利用<code>try...catch</code>语句捕捉运行时错误，保证程序的健壮性。</li><li><strong>性能优化</strong>：减少DOM操作次数，合理使用缓存，懒加载资源等策略提高页面响应速度。</li></ul><h2 id="九、工具与框架" tabindex="-1"><a class="header-anchor" href="#九、工具与框架"><span>九、工具与框架</span></a></h2><ul><li><strong>构建工具</strong>：Webpack, Gulp等可以帮助你自动化构建流程，如压缩文件、合并脚本等。</li><li><strong>前端框架</strong>：Vue.js, React, Angular等提供了丰富的组件库和强大的功能，加速开发过程。</li></ul><h2 id="十、实践建议" tabindex="-1"><a class="header-anchor" href="#十、实践建议"><span>十、实践建议</span></a></h2><ul><li>持续练习，尝试解决实际问题。</li><li>阅读开源项目的源码，学习最佳实践。</li><li>关注社区动态，了解最新技术趋势。</li></ul><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语"><span>结语</span></a></h2><p>JavaScript作为现代Web开发的核心技术之一，其重要性不言而喻。无论是初学者还是有经验的开发者，深入理解和掌握JavaScript都将为你的职业生涯带来巨大的帮助。希望这篇笔记能为你提供全面的学习路径，助你在JavaScript的世界里不断进步。</p>',24)]))}const d=t(i,[["render",r],["__file","javascript.html.vue"]]),p=JSON.parse('{"path":"/docs/program/basic/javascript.html","title":"JavaScript","lang":"zh-CN","frontmatter":{"description":"JavaScript 一、JavaScript简介 JavaScript是一种广泛用于网页开发的脚本语言，支持事件驱动、函数式及基于原型的编程风格。它不仅限于浏览器环境，在服务器端（如Node.js）、移动应用开发（React Native, Ionic等）也有广泛应用。 二、基础语法 变量声明：使用var, let, const来声明变量。其中let...","head":[["meta",{"property":"og:url","content":"https://lhncxf.github.io/docs/program/basic/javascript.html"}],["meta",{"property":"og:site_name","content":"RTS Memoirs"}],["meta",{"property":"og:title","content":"JavaScript"}],["meta",{"property":"og:description","content":"JavaScript 一、JavaScript简介 JavaScript是一种广泛用于网页开发的脚本语言，支持事件驱动、函数式及基于原型的编程风格。它不仅限于浏览器环境，在服务器端（如Node.js）、移动应用开发（React Native, Ionic等）也有广泛应用。 二、基础语法 变量声明：使用var, let, const来声明变量。其中let..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-18T07:17:34.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-18T07:17:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-18T07:17:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LHN\\",\\"url\\":\\"https://lhncxf.github.io\\"}]}"]]},"headers":[{"level":2,"title":"一、JavaScript简介","slug":"一、javascript简介","link":"#一、javascript简介","children":[]},{"level":2,"title":"二、基础语法","slug":"二、基础语法","link":"#二、基础语法","children":[]},{"level":2,"title":"三、控制结构","slug":"三、控制结构","link":"#三、控制结构","children":[]},{"level":2,"title":"四、函数与作用域","slug":"四、函数与作用域","link":"#四、函数与作用域","children":[]},{"level":2,"title":"五、DOM操作","slug":"五、dom操作","link":"#五、dom操作","children":[]},{"level":2,"title":"六、事件处理","slug":"六、事件处理","link":"#六、事件处理","children":[]},{"level":2,"title":"七、异步编程","slug":"七、异步编程","link":"#七、异步编程","children":[]},{"level":2,"title":"八、高级主题","slug":"八、高级主题","link":"#八、高级主题","children":[]},{"level":2,"title":"九、工具与框架","slug":"九、工具与框架","link":"#九、工具与框架","children":[]},{"level":2,"title":"十、实践建议","slug":"十、实践建议","link":"#十、实践建议","children":[]},{"level":2,"title":"结语","slug":"结语","link":"#结语","children":[]}],"git":{"createdTime":1739863054000,"updatedTime":1739863054000,"contributors":[{"name":"Kobe.Lu","username":"Kobe.Lu","email":"kobeluhaonan@gmail.com","commits":1,"url":"https://github.com/Kobe.Lu"}]},"readingTime":{"minutes":2.61,"words":783},"filePathRelative":"docs/program/basic/javascript.md","localizedDate":"2025年2月18日","excerpt":"\\n<h2>一、JavaScript简介</h2>\\n<p>JavaScript是一种广泛用于网页开发的脚本语言，支持事件驱动、函数式及基于原型的编程风格。它不仅限于浏览器环境，在服务器端（如Node.js）、移动应用开发（React Native, Ionic等）也有广泛应用。</p>\\n<h2>二、基础语法</h2>\\n<ul>\\n<li><strong>变量声明</strong>：使用<code>var</code>, <code>let</code>, <code>const</code>来声明变量。其中<code>let</code>和<code>const</code>是ES6新增的关键字，分别用于块级作用域变量和常量。</li>\\n<li><strong>数据类型</strong>：包括原始类型（Undefined, Null, Boolean, Number, String, Symbol）和引用类型（Object）。</li>\\n<li><strong>操作符</strong>：算术操作符（+,-,*,/,%），比较操作符（==, =<mark>, !=, !</mark>, &lt;, &gt;, &lt;=, &gt;=），逻辑操作符（&amp;&amp;, ||, !）等。</li>\\n</ul>","autoDesc":true}');export{d as comp,p as data};
